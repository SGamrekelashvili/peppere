{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sandro\\\\Desktop\\\\PepperWEB\\\\pepper\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport ReactDOM from 'react-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [html, sethtml] = useState();\n  useEffect(() => {\n    fetch('/time/2').then(res => res.json()).then(data => {\n      const b = data.time.split(\"[\");\n      const c = b[1].split(\"]\");\n      const htmlt = c[0];\n      sethtml(htmlt);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    dangerouslySetInnerHTML: {\n      __html: html\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"tYI54n5NnCfyUXikASy5Fem04nw=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Sandro/Desktop/PepperWEB/pepper/src/App.js"],"names":["React","useState","useEffect","ReactDOM","App","html","sethtml","fetch","then","res","json","data","b","time","split","c","htmlt","__html"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,QAAd,EAAuBC,SAAvB,QAAuC,OAAvC;AACA,OAAOC,QAAP,MAAqB,WAArB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,EAAhC;AAGAC,EAAAA,SAAS,CAAC,MAAM;AACdK,IAAAA,KAAK,CAAC,SAAD,CAAL,CAAiBC,IAAjB,CAAsBC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAA7B,EAAyCF,IAAzC,CAA8CG,IAAI,IAAI;AACpD,YAAMC,CAAC,GAAGD,IAAI,CAACE,IAAL,CAAUC,KAAV,CAAgB,GAAhB,CAAV;AACA,YAAMC,CAAC,GAAGH,CAAC,CAAC,CAAD,CAAD,CAAKE,KAAL,CAAW,GAAX,CAAV;AACA,YAAME,KAAK,GAACD,CAAC,CAAC,CAAD,CAAb;AACAT,MAAAA,OAAO,CAACU,KAAD,CAAP;AACD,KALD;AAMD,GAPQ,EAON,EAPM,CAAT;AASA,sBACE;AAAK,IAAA,uBAAuB,EAAE;AAACC,MAAAA,MAAM,EAAEZ;AAAT;AAA9B;AAAA;AAAA;AAAA;AAAA,UADF;AAGD;;GAhBQD,G;;KAAAA,G;AAkBT,eAAeA,GAAf","sourcesContent":["import React,{useState,useEffect} from \"react\"\nimport ReactDOM from 'react-dom';\n\nfunction App() {\n  const [html, sethtml] = useState()\n\n\n  useEffect(() => {\n    fetch('/time/2').then(res => res.json()).then(data => {\n      const b = data.time.split(\"[\")\n      const c = b[1].split(\"]\")\n      const htmlt=c[0]\n      sethtml(htmlt)\n    })\n  }, []);\n\n  return (\n    <div dangerouslySetInnerHTML={{__html: html}} />\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}